{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilleuh/Coding/Pantun%20Generator/app/components/ModeSelector.tsx"],"sourcesContent":["import React from 'react'\nimport { Card } from './Card'\nimport { Button } from './Button'\n\ninterface ModeSelectorProps {\n  selectedMode: string | null\n  onModeSelect: (mode: string) => void\n}\n\nexport const ModeSelector: React.FC<ModeSelectorProps> = ({\n  selectedMode,\n  onModeSelect\n}) => {\n  const modes = [\n    {\n      id: 'random',\n      title: 'Acak',\n      description: 'Buat pantun dengan tema acak yang menarik',\n      icon: 'üé≤'\n    },\n    {\n      id: 'continue',\n      title: 'Lanjutkan',\n      description: 'Lanjutkan pantun dari baris yang sudah Anda tulis',\n      icon: '‚úçÔ∏è'\n    },\n    {\n      id: 'mood',\n      title: 'Suasana Hati',\n      description: 'Buat pantun sesuai suasana hati Anda',\n      icon: 'üí≠'\n    }\n  ]\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n      {modes.map((mode) => (\n        <div\n          key={mode.id}\n          className={`mode-card ${selectedMode === mode.id ? 'selected' : ''}`}\n          onClick={() => onModeSelect(mode.id)}\n        >\n          <div className=\"p-4 text-center\">\n            <div className=\"text-3xl mb-3\">\n              {mode.icon}\n            </div>\n            <h3 className=\"text-lg font-bold text-black mb-2\">\n              {mode.title}\n            </h3>\n            <p className=\"text-sm text-gray-600 font-medium\">\n              {mode.description}\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AASO,MAAM,eAA4C,CAAC,EACxD,YAAY,EACZ,YAAY,EACb;IACC,MAAM,QAAQ;QACZ;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;QACR;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;QACR;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;QACR;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;gBAEC,WAAW,CAAC,UAAU,EAAE,iBAAiB,KAAK,EAAE,GAAG,aAAa,IAAI;gBACpE,SAAS,IAAM,aAAa,KAAK,EAAE;0BAEnC,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACZ,KAAK,IAAI;;;;;;sCAEZ,8OAAC;4BAAG,WAAU;sCACX,KAAK,KAAK;;;;;;sCAEb,8OAAC;4BAAE,WAAU;sCACV,KAAK,WAAW;;;;;;;;;;;;eAZhB,KAAK,EAAE;;;;;;;;;;AAmBtB","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilleuh/Coding/Pantun%20Generator/app/components/Button.tsx"],"sourcesContent":["import React from 'react'\n\ninterface ButtonProps {\n  children: React.ReactNode\n  onClick?: () => void\n  variant?: 'primary' | 'secondary' | 'accent'\n  size?: 'sm' | 'md' | 'lg'\n  disabled?: boolean\n  className?: string\n  type?: 'button' | 'submit' | 'reset'\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  onClick,\n  variant = 'primary',\n  size = 'md',\n  disabled = false,\n  className = '',\n  type = 'button'\n}) => {\n  const baseClasses = 'font-semibold rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed transform hover:-translate-y-1 disabled:transform-none'\n  \n  const variantClasses = {\n    primary: 'modern-button',\n    secondary: 'modern-button-secondary',\n    accent: 'modern-button-accent'\n  }\n  \n  const sizeClasses = {\n    sm: 'py-3 px-6 text-sm',\n    md: 'py-4 px-8 text-base',\n    lg: 'py-5 px-10 text-lg'\n  }\n  \n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n      className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}\n    >\n      {children}\n    </button>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAYO,MAAM,SAAgC,CAAC,EAC5C,QAAQ,EACR,OAAO,EACP,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,WAAW,KAAK,EAChB,YAAY,EAAE,EACd,OAAO,QAAQ,EAChB;IACC,MAAM,cAAc;IAEpB,MAAM,iBAAiB;QACrB,SAAS;QACT,WAAW;QACX,QAAQ;IACV;IAEA,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QACC,MAAM;QACN,SAAS;QACT,UAAU;QACV,WAAW,GAAG,YAAY,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW;kBAEvF;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilleuh/Coding/Pantun%20Generator/app/components/PantunDisplay.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Card } from './Card'\nimport { Button } from './Button'\nimport { FiCopy, FiCheck, FiRefreshCw } from 'react-icons/fi'\n\ninterface PantunDisplayProps {\n  pantun: string\n  onGenerateNew: () => void\n  isLoading?: boolean\n}\n\nexport const PantunDisplay: React.FC<PantunDisplayProps> = ({\n  pantun,\n  onGenerateNew,\n  isLoading = false\n}) => {\n  const [copied, setCopied] = useState(false)\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(pantun)\n      setCopied(true)\n      setTimeout(() => setCopied(false), 2000)\n    } catch (err) {\n      console.error('Failed to copy text: ', err)\n    }\n  }\n\n  const formatPantun = (text: string) => {\n    return text.split('\\n').map((line, index) => (\n      <div key={index} className=\"mb-2 last:mb-0\">\n        {line}\n      </div>\n    ))\n  }\n\n  return (\n    <div className=\"modern-card p-6 text-center\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-bold text-black mb-3\">\n          Pantun Anda\n        </h3>\n        <div className=\"pantun-display bg-gray-50 rounded-lg p-4 border border-gray-200\">\n          {formatPantun(pantun)}\n        </div>\n      </div>\n      \n      <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n        <Button\n          onClick={handleCopy}\n          variant=\"secondary\"\n          className=\"flex items-center justify-center gap-2 min-w-[120px]\"\n        >\n          {copied ? (\n            <>\n              <FiCheck className=\"w-4 h-4\" />\n              Tersalin!\n            </>\n          ) : (\n            <>\n              <FiCopy className=\"w-4 h-4\" />\n              Salin\n            </>\n          )}\n        </Button>\n        \n        <Button\n          onClick={onGenerateNew}\n          variant=\"accent\"\n          disabled={isLoading}\n          className=\"flex items-center justify-center gap-2 min-w-[120px]\"\n        >\n          {isLoading ? (\n            <>\n              <FiRefreshCw className=\"w-4 h-4 animate-spin\" />\n              Membuat...\n            </>\n          ) : (\n            <>\n              <FiRefreshCw className=\"w-4 h-4\" />\n              Buat Lagi\n            </>\n          )}\n        </Button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;;;;;AAQO,MAAM,gBAA8C,CAAC,EAC1D,MAAM,EACN,aAAa,EACb,YAAY,KAAK,EAClB;IACC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IAErC,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,UAAU;YACV,WAAW,IAAM,UAAU,QAAQ;QACrC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,OAAO,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,sBACjC,8OAAC;gBAAgB,WAAU;0BACxB;eADO;;;;;IAId;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAGlD,8OAAC;wBAAI,WAAU;kCACZ,aAAa;;;;;;;;;;;;0BAIlB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,sIAAM;wBACL,SAAS;wBACT,SAAQ;wBACR,WAAU;kCAET,uBACC;;8CACE,8OAAC,+JAAO;oCAAC,WAAU;;;;;;gCAAY;;yDAIjC;;8CACE,8OAAC,8JAAM;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;kCAMpC,8OAAC,sIAAM;wBACL,SAAS;wBACT,SAAQ;wBACR,UAAU;wBACV,WAAU;kCAET,0BACC;;8CACE,8OAAC,mKAAW;oCAAC,WAAU;;;;;;gCAAyB;;yDAIlD;;8CACE,8OAAC,mKAAW;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;;;;;;;;;AAQjD","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilleuh/Coding/Pantun%20Generator/app/components/TextArea.tsx"],"sourcesContent":["import React from 'react'\n\ninterface TextAreaProps {\n  value: string\n  onChange: (value: string) => void\n  placeholder?: string\n  rows?: number\n  disabled?: boolean\n  className?: string\n  label?: string\n}\n\nexport const TextArea: React.FC<TextAreaProps> = ({\n  value,\n  onChange,\n  placeholder = '',\n  rows = 4,\n  disabled = false,\n  className = '',\n  label\n}) => {\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-semibold text-black mb-2\">\n          {label}\n        </label>\n      )}\n      <textarea\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        placeholder={placeholder}\n        rows={rows}\n        disabled={disabled}\n        className={`input-field ${className}`}\n      />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAYO,MAAM,WAAoC,CAAC,EAChD,KAAK,EACL,QAAQ,EACR,cAAc,EAAE,EAChB,OAAO,CAAC,EACR,WAAW,KAAK,EAChB,YAAY,EAAE,EACd,KAAK,EACN;IACC,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBAAM,WAAU;0BACd;;;;;;0BAGL,8OAAC;gBACC,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,aAAa;gBACb,MAAM;gBACN,UAAU;gBACV,WAAW,CAAC,YAAY,EAAE,WAAW;;;;;;;;;;;;AAI7C","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilleuh/Coding/Pantun%20Generator/app/components/PantunGenerator.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\nimport { ModeSelector } from './ModeSelector'\nimport { PantunDisplay } from './PantunDisplay'\nimport { TextArea } from './TextArea'\nimport { Button } from './Button'\nimport { Card } from './Card'\n\ntype Mode = 'random' | 'continue' | 'mood'\n\ninterface PantunGeneratorProps {}\n\nexport const PantunGenerator: React.FC<PantunGeneratorProps> = () => {\n  const [selectedMode, setSelectedMode] = useState<Mode | null>(null)\n  const [input, setInput] = useState('')\n  const [mood, setMood] = useState('')\n  const [generatedPantun, setGeneratedPantun] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n\n  const handleModeSelect = (mode: string) => {\n    setSelectedMode(mode as Mode)\n    setInput('')\n    setMood('')\n    setGeneratedPantun('')\n    setError('')\n  }\n\n  const handleGenerate = async () => {\n    if (!selectedMode) return\n\n    setIsLoading(true)\n    setError('')\n\n    try {\n      const response = await fetch('/api/generate-pantun', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          mode: selectedMode,\n          input: selectedMode === 'continue' ? input : undefined,\n          mood: selectedMode === 'mood' ? mood : undefined,\n        }),\n      })\n\n      const data = await response.json()\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Terjadi kesalahan')\n      }\n\n      setGeneratedPantun(data.pantun)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Terjadi kesalahan')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleGenerateNew = () => {\n    setGeneratedPantun('')\n    setError('')\n  }\n\n  const renderInputArea = () => {\n    if (!selectedMode) return null\n\n    switch (selectedMode) {\n      case 'continue':\n        return (\n          <div className=\"modern-card p-4\">\n            <TextArea\n              label=\"Masukkan baris pantun yang sudah ada (1-3 baris):\"\n              value={input}\n              onChange={setInput}\n              placeholder=\"Contoh:&#10;Ikan lele minum bir&#10;Ikan hiu makan tomat\"\n              rows={3}\n            />\n          </div>\n        )\n      \n      case 'mood':\n        return (\n          <div className=\"modern-card p-4\">\n            <TextArea\n              label=\"Ceritakan suasana hati Anda:\"\n              value={mood}\n              onChange={setMood}\n              placeholder=\"Contoh: Sedih karena kehilangan, bahagia karena berhasil, atau galau karena cinta...\"\n              rows={3}\n            />\n          </div>\n        )\n      \n      case 'random':\n        return (\n          <div className=\"modern-card p-4 text-center\">\n            <p className=\"text-gray-600 text-base font-medium\">\n              Klik tombol \"Buat Pantun\" untuk menghasilkan pantun acak\n            </p>\n          </div>\n        )\n      \n      default:\n        return null\n    }\n  }\n\n  const canGenerate = () => {\n    switch (selectedMode) {\n      case 'continue':\n        return input.trim().length > 0\n      case 'mood':\n        return mood.trim().length > 0\n      case 'random':\n        return true\n      default:\n        return false\n    }\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto px-4 py-6\">\n      {/* Header */}\n      <div className=\"text-center mb-6\">\n        <h1 className=\"hero-title\">\n          Pantun Generator\n        </h1>\n        <p className=\"hero-subtitle\">\n          Mau bikin pantun apa hari ini?\n        </p>\n      </div>\n\n      {/* Mode Selection */}\n      <ModeSelector\n        selectedMode={selectedMode}\n        onModeSelect={handleModeSelect}\n      />\n\n      {/* Input Area */}\n      {selectedMode && (\n        <div className=\"mb-6\">\n          {renderInputArea()}\n          \n          <div className=\"flex justify-center mt-4\">\n            <Button\n              onClick={handleGenerate}\n              disabled={!canGenerate() || isLoading}\n              size=\"md\"\n              className=\"min-w-[200px]\"\n            >\n              {isLoading ? 'Membuat Pantun...' : 'Buat Pantun'}\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"modern-card p-4 mb-4 bg-red-50 border-red-200\">\n          <p className=\"text-red-600 text-center font-semibold text-sm\">{error}</p>\n        </div>\n      )}\n\n      {/* Result Display */}\n      {generatedPantun && (\n        <PantunDisplay\n          pantun={generatedPantun}\n          onGenerateNew={handleGenerateNew}\n          isLoading={isLoading}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}